import { NextRequest, NextResponse } from 'next/server';

const BACKEND_URL = process.env.NEXT_PUBLIC_API_URL

export async function POST(request: NextRequest) {
    try {
        const body = await request.json();
        
        console.log('üì§ Redirecionando para backend Python:', `${BACKEND_URL}/api/classify`);
        console.log('üìù Dados enviados:', body);
        
        const response = await fetch(`${BACKEND_URL}/api/classify`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(body),
        });

        console.log('üì• Resposta do backend:', response.status);

        if (!response.ok) {
            const errorText = await response.text();
            console.error('‚ùå Erro do backend:', errorText);
            
            let errorData;
            try {
                errorData = JSON.parse(errorText);
            } catch {
                errorData = { error: 'Erro ao processar solicita√ß√£o' };
            }
            
            return NextResponse.json(
                { error: errorData.error || 'Erro ao processar solicita√ß√£o' },
                { status: response.status }
            );
        }

        const data = await response.json();
        console.log('‚úÖ Dados recebidos do Python:', data);
        
        return NextResponse.json(data);

    } catch (error) {
        console.error('‚ùå Erro na API:', error);
        
        // Se o backend Python n√£o estiver dispon√≠vel
        if (error instanceof TypeError && error.message.includes('fetch')) {
            return NextResponse.json(
                { error: 'Backend Python n√£o est√° dispon√≠vel. Certifique-se que est√° rodando na porta 5000.' },
                { status: 503 }
            );
        }
        
        return NextResponse.json(
            { error: 'Erro interno do servidor' },
            { status: 500 }
        );
    }
}